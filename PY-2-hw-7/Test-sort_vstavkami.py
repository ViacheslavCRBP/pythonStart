#  Сортировка вставками:
#  сложность алгоритма: О(n**2) "О от n в квадрате"  - в худшем
#  времени    и О(n) - в лучшем времени (когда массив уже отсортирован
#  - один раз пробежит по отсортированному массиву и сделает вывод,
#  что уже отсортировано)
#  стабильность: устойчивая #  (два одинаковых
#  элемента сохранят порядок относительно друг друга)
#  Тип (категория): вставками
#  Потребление памяти: не требуется доп.память.

#  Алгоритм:
#  из массива берется последовательно каждый элемент, кроме первого (index == 0)
#  и вставляется в отсортированную часть массива

import random

size = 10
array = [i for i in range(size)]
random.shuffle(array)  # метод shuffle() перемешал значения в array
print(array)
print('*' * 50)

def insertion_sort(array):
    for i in range(1, len(array)):
        spam = array[i]
        #  это временная переменная - та,
        # которую мы берем из списка и решаем, в какое место поставить.
        j = i
        while array[j - 1] > spam and j > 0:
            array[j] = array[j - 1]
            j -= 1

        array[j] = spam
        print(array)

insertion_sort(array)
print(array)



